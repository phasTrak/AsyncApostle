<idea-plugin>
   <id>AsyncApostle.AsyncApostle</id>
   <name>AsyncApostle</name>
   <description>
      <![CDATA[<p>This is an extension that converts your synchronous code to its asynchronous version and helps you to write your own asynchronous applications.</p>
               
               <h1>AsyncApostle can:</h1>
               
               <ol>
                   <li>Replace a returning type with generic or non-generic Task&lt;T&gt; or Task</li>
                   <li>Rename a hierarchy of overridden methods from &lt;MethodName&gt; to &lt;MethodName&gt;Async</li>
                   <li>Add the System.Threading.Tasks to a usings declaration</li>
                   <li>Analyze a method body and replace the every synchronous call with its async implementation if exists.</li>
                   <li>Analyze a method body and replace the every .Result call with the await call.</li>
                   <li>Analyze usage of a processed method. If the method is called from async context the AsyncApostle will replace its call with the await expression, otherwise it will just call .Result or .Wait()</li>
               </ol>]]>
   </description>
   <version>2024.3.0.0</version>
   <vendor url="https://github.com/phasTrak/AsyncApostle">phasTrak</vendor>
   <idea-version since-build="233"
                 until-build="243.*"/>
   <extensions defaultExtensionNs="com.intellij"/>
   <depends>com.intellij.modules.rider</depends>
</idea-plugin>